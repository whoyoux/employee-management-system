import type { NextPage } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";
import { trpc } from "../utils/trpc";
import { useState } from "react";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex flex-col items-center justify-center p-4">
        <div className="flex w-full items-center justify-center pt-6 text-2xl">
          {sessionData ? <Auth /> : <h1>Please log in to use our service!</h1>}
        </div>
      </main>
    </>
  );
};

import toast from "react-hot-toast";
import Link from "next/link";

const Auth: React.FC = () => {
  // const { data: employee } = trpc.employee.get.useQuery({
  //   id: "siema",
  // });

  const { data: projects, refetch } = trpc.project.getAll.useQuery();

  const [projectName, setProjectName] = useState("");

  const createProject = trpc.project.create.useMutation({
    onSuccess: () => {
      setProjectName("");
      toast.success("New project created!");
      refetch();
    },
    onError: (error) => {
      toast.error(error.message);
    },
  });

  const handleCreateNewProject = () => {
    const trimmedProjectName = projectName.trimStart().trimEnd();
    if (trimmedProjectName.length <= 3)
      return toast.error("Project name must contain at least 3 character");

    if (trimmedProjectName.length > 25)
      return toast.error("Project name must contain at most 25 characters");

    createProject.mutate({
      name: projectName,
    });
  };

  return (
    <div className="flex flex-col gap-5 text-center">
      <div>Authenticated</div>
      <input
        type="text"
        placeholder="Project name..."
        className="btn"
        onChange={(e) => setProjectName(e.target.value)}
        value={projectName}
      />
      <button className="btn" onClick={handleCreateNewProject}>
        Create new project
      </button>
      <div className="flex gap-5">
        {projects?.map((project) => {
          return (
            <ProjectCard id={project.id} name={project.name} key={project.id} />
          );
        })}
      </div>
    </div>
  );
};

export default Home;

type ProjectCardProps = {
  id: string;
  name: string;
};

const ProjectCard: React.FC<ProjectCardProps> = ({ id, name }) => {
  return (
    <Link href={`/project/${id}`} passHref>
      <div className="cursor-pointer rounded-xl bg-gray-200 py-4 px-5">
        <h1>{name}</h1>
      </div>
    </Link>
  );
};
